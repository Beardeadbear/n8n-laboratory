{
  "name": "RAG Support Chatbot",
  "nodes": [
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "fliplet-support-articles",
          "mode": "list",
          "cachedResultName": "fliplet-support-articles"
        },
        "options": {}
      },
      "id": "753455a3-ddc8-4a74-b043-70a0af38ff9e",
      "name": "Pinecone Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "position": [
        912,
        368
      ],
      "typeVersion": 1,
      "credentials": {
        "pineconeApi": {
          "id": "LcqFookFOvd7LkWk",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {},
      "id": "a7c8fa7f-cad2-4497-a295-30aa2e98cacc",
      "name": "Embeddings Google Gemini",
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "position": [
        832,
        560
      ],
      "typeVersion": 1,
      "credentials": {
        "googlePalmApi": {
          "id": "Ui9k2U8pFwAua7yR",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "binaryMode": "specificField",
        "options": {}
      },
      "id": "215f0519-4359-4e4b-a90c-7e54b1cc52b5",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        1072,
        592
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chunkOverlap": 100,
        "options": {}
      },
      "id": "863d3d1d-1621-406e-8320-688f64b07b09",
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "position": [
        1056,
        784
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are to help me use Fliplet by answering my questions about Fliplet.\n\nI am accessing you via Fliplet Studio, a web app that helps Fliplet users to build web and mobile apps with Fliplet.\n\nBefore answering, ensure you understand the following information. Do not reply unless you understand all of the following:\n1. My objective\n2. What I am trying to do with Fliplet\n3. Any specific features of Fliplet I am trying to use\n4. My level of experience with Fliplet\n5. Any errors or messages I am receiving from Fliplet\n6. Any other questions you need to understand before providing suggested answers\n7. Provide step by step instructions if/when required, broken down by number\n8. Ask the user to upload a screenshot \n\nAsk me 1 question at a time. Do not send me a list of questions.\n\nAlways ask me a relevant question at the end of your response to encourage me to keep speaking with you.\n\nYou should reply in a helpful and supportive manner. You should be succinct and share relevant URLs that may help me to answer my question. Assume your audience is non technical unless told otherwise.\n\nIf I am asking about an issue or a bug then you need to ask the user what they are expecting to see vs what they actually see and how they are accessing the app. Is it the live app or in Fliplet Studio. Depending on the answer you can ask the next question. \n\nIf you are asked about notifications then clarify the following: \n1. What type of notification for e.g. push, email or SMS\n\nIf you are asked about push notifications, then you need to ask the following before giving any advice:\n1. What is this the trigger for the push notification for e.g. a form was submitted\n2. Who the notification was meant to be sent to\n3. What the issue is\n\nIf you are asked about LFD's then you need to clarify the following: \n1. Which type of LFD they are using\n2. What is the current settings of the LFD\n3. What issues if any they are having\n4. If the error is related to data access then check the security rules for the data source connected to the LFD. \n\nIf you are asked about pricing plans you need to do the following: \n\n1. Provide them the following links: \nPricing page: https://fliplet.com/pricing/\nFull features and limits per plan: https://fliplet.com/plan-feature-table/\nPrice calculator: https://fliplet.com/price-calculator/\nand them ask them to visit these links and there they can book a call with sales. \nDo not try to answer sales or plan limits related queries.\n\nIf the user asks to speak to a human tell them to click on the \"click here\" link in the banner above the input box where the chat. \n\nIf you are not able to help the user becuase you are not confident in your answer or if the user is saying that your answers are not helping then tell they user that they should speak to a human and provide instructions on how to do so i.e. click on the \"click here\" link in the banner above the input box where the chat.\n\n**CRITICAL INSTRUCTION: You MUST ONLY use the vector database for all Fliplet-related questions.**\n\n**NEVER search the internet or use external sources. Your ONLY knowledge source is the vector database containing Fliplet help center articles.**\n\n**TOOL USAGE INSTRUCTIONS:**\n\nYou MUST use the Vector Store Tool for EVERY question about Fliplet.\n\n**Step-by-step process:**\n1. When a user asks a question, IMMEDIATELY use the Vector Store Tool\n2. Search the vector database for relevant information\n3. Use the retrieved information to answer the question\n4. Reference the specific help center articles you found\n\n**Example tool usage:**\n- User asks: \"How do I configure a Data Source?\"\n- You MUST: Use Vector Store Tool to search for \"Data Source configuration\"\n- Then: Answer based on the retrieved help center content\n\n**NEVER answer Fliplet questions without using the Vector Store Tool first.**\n\n**RESPONSE STYLE INSTRUCTIONS:**\n\n- **NEVER use hedging words** like \"I think\", \"I believe\", \"according to documentation\", \"it seems\", \"possibly\", \"might be\", etc.\n- **Give direct, confident answers** based on the vector database information\n- **Answer strictly** without additional words or explanations unless specifically asked\n- **Be concise and to the point**\n- **Use definitive language** like \"is\", \"are\", \"will\", \"does\" instead of \"might be\", \"could be\", \"seems like\"\n\n**When answering ANY question about Fliplet features, functionality, or troubleshooting:**\n\n1. **ALWAYS search the vector database first** using the Vector Store Tool to find relevant information from the stored Fliplet help center articles.\n\n2. **The vector database contains comprehensive Fliplet documentation about:**\n   - Data Powered List components and templates\n   - Data sources and connections\n   - LFD components and settings\n   - AI features and components\n   - Multi-organization and environment management\n   - Push notifications and studio features\n   - Various Fliplet solutions and components\n   - Step-by-step tutorials and guides\n   - SEO settings and configuration\n   - Form components and validation\n   - Component customization options\n\n3. **Your response MUST be based entirely on the stored help center data.** If the vector database doesn't contain information about a specific topic, tell the user that you don't have information about that topic in your knowledge base and suggest they contact Fliplet support.\n\n4. **NEVER attempt to search the internet** for additional information about Fliplet components, features, or troubleshooting.\n\n5. **Always reference the specific help center articles** you found in the vector database when providing answers.\n\n6. **If you cannot find relevant information in the vector database**, respond with: \"I don't have information about [specific topic] in my knowledge base. This might be a newer feature or a topic not covered in the current documentation. I recommend contacting Fliplet support directly for assistance.\"\n\nThe current list of components on the user's screen will be automatically provided in each conversation context. Use this information to provide relevant assistance.\n\nThe user is currently using a copy of the undefined solution.\nIf the user uses different terminology to describe what they are seeing on the screen clarify with them on which component on the screen is giving an issue for e.g. a user might be referring to a screen called Manage agenda but if you see there is a form component in the provided context you can clarify with the user that they are having an issue with the form component and provide the relevant assistance.  \n\nYou always want to provide contextual information with the components on the screen to provide relevant assistance. If you detect a component on the screen but are unsure on what settings it offers, you MUST search the vector database for information about that component. If the vector database doesn't contain information about the component, tell the user you don't have documentation for that specific component in your knowledge base. "
        }
      },
      "id": "5af1efb1-ea69-466e-bb3b-2b7e6b1ceef7",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        640,
        1184
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "name": "company_documents_tool",
        "description": "Retrieve information from any company documents"
      },
      "id": "825632ac-1edf-4e63-948d-b1a498b2b962",
      "name": "Vector Store Tool",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "position": [
        1136,
        1360
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "pineconeIndex": {
          "__rl": true,
          "value": "fliplet-support-articles",
          "mode": "list",
          "cachedResultName": "fliplet-support-articles"
        },
        "options": {}
      },
      "id": "72d2f685-bcc3-4e62-a5e3-72c0fe65f8e8",
      "name": "Pinecone Vector Store (Retrieval)",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "position": [
        960,
        1600
      ],
      "typeVersion": 1,
      "credentials": {
        "pineconeApi": {
          "id": "LcqFookFOvd7LkWk",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {},
      "id": "eeff81cb-6aec-4e7f-afe0-432d87085fb2",
      "name": "Embeddings Google Gemini (retrieval)",
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "position": [
        864,
        1792
      ],
      "typeVersion": 1,
      "credentials": {
        "googlePalmApi": {
          "id": "Ui9k2U8pFwAua7yR",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $json.id }}"
        },
        "options": {
          "fileName": "={{ $json.name }}"
        }
      },
      "id": "8bb6ebb1-1deb-498b-8da4-b809a736e097",
      "name": "Download File From Google Drive",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        688,
        368
      ],
      "typeVersion": 3,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "aS383QOCyu3G2dzJ",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Chat with company documents"
      },
      "id": "bd83bacf-dff1-4b7c-af5c-b249fb16c113",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        656,
        1024
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "mode": "list",
          "value": "1evDIoHePhjw_LgVFZXSZyK1sZm2GHp9W",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1evDIoHePhjw_LgVFZXSZyK1sZm2GHp9W",
          "cachedResultName": "INNOVI PRO"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "7b90daab-0fb2-4c8a-93e6-b138bb04f282",
      "name": "Google Drive File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "position": [
        368,
        512
      ],
      "typeVersion": 1,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "aS383QOCyu3G2dzJ",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1cqcF48u6dzb8DXBhBhIPj7BNTroP44d3",
          "mode": "list",
          "cachedResultName": "n8n-laboratory",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1cqcF48u6dzb8DXBhBhIPj7BNTroP44d3"
        },
        "event": "fileCreated",
        "options": {
          "fileType": "application/vnd.google-apps.document"
        }
      },
      "id": "3a6c6cef-7a19-42ef-8092-eaf57dae4cdd",
      "name": "Google Drive File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "position": [
        368,
        240
      ],
      "typeVersion": 1,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "aS383QOCyu3G2dzJ",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {},
      "id": "1e38f1c8-7bd0-4eeb-addc-62339582d350",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        688,
        1408
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "4b0ab858-99b1-4337-8c5c-a223519e3662",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        320,
        1200
      ],
      "webhookId": "5f1c0c82-0ff9-40c7-9e2e-b1a96ffe24cd",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "content": "## Add docuemnts to vector store when updating or creating new documents in Google Drive",
        "width": 320
      },
      "id": "bfb684d1-e5c1-41da-8305-b2606a2eade6",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        672,
        128
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-exp",
        "options": {}
      },
      "id": "8f627ec6-4b3f-43ad-a4a3-e2b199a7fe58",
      "name": "Google Gemini Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        496,
        1392
      ],
      "typeVersion": 1,
      "credentials": {
        "googlePalmApi": {
          "id": "Ui9k2U8pFwAua7yR",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-exp",
        "options": {}
      },
      "id": "f2133a06-0088-46de-9f74-a3f9fe478f98",
      "name": "Google Gemini Chat Model (retrieval)",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        1312,
        1600
      ],
      "typeVersion": 1,
      "credentials": {
        "googlePalmApi": {
          "id": "Ui9k2U8pFwAua7yR",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Set up steps\n\n1. Google Cloud Project and Vertex AI API:\n* Create a Google Cloud project.\n* Enable the Vertex AI API for your project.\n2. Google AI API Key:\n* Obtain a Google AI API key from Google AI Studio.\n3. Pinecone Account:\n* Create a free account on the Pinecone website.\nObtain your API key from your Pinecone dashboard.\n* Create an index named company-files in your Pinecone project.\n4. Google Drive:\n* Create a dedicated folder in your Google Drive where company documents will be stored.\n5. Credentials in n8n: Configure credentials in your n8n environment for:\n* Google Drive OAuth2\n* Google Gemini(PaLM) Api (using your Google AI API key)\n* Pinecone API (using your Pinecone API key)\n5. Import the Workflow:\n* Import this workflow into your n8n instance.\n6. Configure the Workflow:\n* Update both Google Drive Trigger nodes to watch the specific folder you created in your Google Drive.\n* Configure the Pinecone Vector Store nodes to use your company-files index.",
        "height": 720,
        "width": 420
      },
      "id": "578deb96-8393-4850-9757-fa97b2bc9992",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -320,
        592
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "split-in-batches-node",
      "name": "Split In Batches",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        528,
        368
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Split In Batches: Processes multiple files individually to prevent conflicts",
        "width": 320
      },
      "id": "split-note",
      "name": "Split In Batches Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        528,
        128
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "AI Agent": {
      "main": [
        []
      ]
    },
    "Vector Store Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "main": [
        []
      ]
    },
    "Embeddings Google Gemini": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive File Created": {
      "main": [
        [
          {
            "node": "Split In Batches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive File Updated": {
      "main": [
        [
          {
            "node": "Split In Batches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches": {
      "main": [
        [
          {
            "node": "Download File From Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download File From Google Drive": {
      "main": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store (Retrieval)": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini (retrieval)": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store (Retrieval)",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model (retrieval)": {
      "ai_languageModel": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f80fe237-35ff-4cc2-9c08-f305cd891da8",
  "meta": {
    "templateId": "2753",
    "templateCredsSetupCompleted": true,
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "3dBxxG6ACbtZIoxk",
  "tags": [
    {
      "createdAt": "2025-08-29T07:05:02.234Z",
      "updatedAt": "2025-08-29T07:05:02.234Z",
      "id": "taKV3597zvfgNfnZ",
      "name": "fliplet-chatbot"
    }
  ]
}